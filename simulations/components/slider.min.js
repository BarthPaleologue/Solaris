class Slider{constructor(t,e,i,s,l,a=(t=>{})){this.min=i,this.max=s,this.initialValue=l,this.onSlide=a,this.id=t,this.parent=e;let n=document.createElement("div");n.setAttribute("id",`${t}SliderContainer`),n.setAttribute("class","sliderContainer"),this.container=n;let r=document.createElement("span");r.setAttribute("id",`${t}SliderHandle`),r.setAttribute("class","sliderHandle"),r.innerHTML=String(l),this.handle=r,n.appendChild(r);let h=document.createElement("input");h.setAttribute("id",`${t}Slider`),h.setAttribute("class","sliderElement"),h.setAttribute("type","range"),h.setAttribute("min",String(i)),h.setAttribute("max",String(s)),h.setAttribute("value",String(l)),this.slider=h,n.appendChild(h),this.parent.appendChild(n),this.updateWithoutCallback(),h.addEventListener("input",()=>this.update()),window.addEventListener("resize",()=>this.updateWithoutCallback())}increment(){this.slider.value=String(this.getValue()+1),this.update()}decrement(){this.slider.value=String(this.getValue()-1),this.update()}getValue(){return parseInt(this.slider.value)}setValue(t){this.slider.value=String(t),this.update()}setValueWithoutCallback(t){this.slider.value=String(t)}updateWithoutCallback(){this.handle.innerHTML=this.slider.value;let t=(this.getValue()-this.min)/(this.max-this.min)*(1-this.handle.clientWidth/(1*this.slider.clientWidth));this.handle.style.marginLeft=`${100*t}%`}update(){this.updateWithoutCallback(),this.onSlide(parseInt(this.slider.value))}reset(){this.setValue(this.initialValue)}resetWithoutCallback(){this.setValueWithoutCallback(this.initialValue)}remove(){this.container.remove()}}